import pandas as pd
import matplotlib.pyplot as plt

from aiogram.types import CallbackQuery

from keyboards.inline_kbs import input_player_game
from db_hadler.db_class import Database

pd.set_option('display.max_columns', None)  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã pandas
player_list = list()  # –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
text_players = str()  # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤, —É—á–∞—Å—Ç–≤—É—é—â–∏—Ö –≤ –∏–≥—Ä–µ
date = str()  # –£—á–µ—Ç –¥–∞—Ç—ã —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
game_users = list()  # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
game_id = int()  # id —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã


def player_input(text):
    """–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É"""
    global player_list, text_players, date, game_users, game_id
    if text == '–Ω–æ–≤–∞—è –∏–≥—Ä–∞':
        '''–û–±–Ω–æ–≤–ª—è–µ–º —É—á–µ—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ'''
        player_list = list()
        text_players = str()
        date = str()
        game_users = list()
        game_id = int()

    else:
        player_list.append(text)  # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
        text_players += f'\n{text}'  # –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤, —É—á–∞—Å—Ç–≤—É—é—â–∏—Ö –≤ –∏–≥—Ä–µ


async def update_users():
    """–û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    global game_users
    game_users = await Database.get_users_bd()


async def get_users():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    return game_users


def get_players():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Ç–∫—É—â–µ–π –∏–≥—Ä—ã"""
    return player_list


def get_players_text():
    """–ü–æ–ª—É—á–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä–µ"""
    return text_players


async def update_date():
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    global date
    date = await Database.get_date()


async def get_date():
    """–ü–æ–ª—É—á–∏—Ç—å –¥–∞—Ç—É —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"""
    return date


async def update_game_id():
    """–û–±–Ω–æ–≤–∏—Ç—å id —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"""
    global game_id
    game_id = await Database.get_game_id()


async def get_game_id():
    """–ü–æ–ª—É—á–∏—Ç—å id —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"""
    return game_id


async def input_players_start(call: CallbackQuery):
    """–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º"""
    player_input(call.data)
    new_keyboards = input_player_game(game_users=game_users, player_list=player_list, start=True)
    await call.message.answer(text=f'–í –∏–≥—Ä–µ: {text_players}', reply_markup=new_keyboards)


async def input_players(call: CallbackQuery):
    """"–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É"""
    new_keyboards = input_player_game(game_users=game_users, player_list=player_list, start=False)
    await call.message.answer(text=f'–ö—Ç–æ —ç—Ç–∞ –∂–µ—Ä—Ç–≤–∞?üëÄ', reply_markup=new_keyboards)


async def text_start(data):
    """–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∏–≥—Ä—ã"""
    text = '–ù—É –ø–æ–ª–µ—Ç–µ–ª–∏ üé∞\n-------------------'
    count = data.get('count')
    players = data.get('players_in_game')
    text += f'\n1 —Ñ–∏—à–∫–∞ = {count} —Ä—É–±.\n-------------------\n–í –∏–≥—Ä–µ:'
    for player in players:
        text += f'\n{player}'
    return text


async def text_game(data: dict, count: int):
    """–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–≥—Ä—ã"""
    text = f'–ò–≥—Ä–∞ {date}\n–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: 1 –∫ {count}'
    table_game = dict()
    for key in data.keys():
        table_game.setdefault('–ò–≥—Ä–æ–∫', []).append(key)
        for k, v in data.get(key).items():
            table_game.setdefault(k, []).append(v)
    tb = pd.DataFrame.from_dict(table_game)
    fig, ax = plt.subplots(figsize=(10, 5))
    fig.set_size_inches(6, 4)
    fig.canvas.manager.full_screen_toggle()
    fig.set_facecolor('#4f4f4f')
    ax.axis('tight')
    ax.axis('off')
    ax.table(cellText=tb.values,
             colLabels=tb.columns,
             loc='center',
             cellLoc='center',
             rowLoc='center',
             colColours=['YellowGreen'] * 6)
    plt.savefig(f'game_image.png', bbox_inches='tight')
    print(tb)
    return text
