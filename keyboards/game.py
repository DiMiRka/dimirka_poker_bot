from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from create_bot import admins


async def make_count():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Ñ–∏—à–∫–∏ –∫ —Ä—É–±–ª—é"""
    kb_list = [
        [InlineKeyboardButton(text='1 —Ä—É–±.', callback_data='—Ñ–∏—à–∫–∞ 1')],
        [InlineKeyboardButton(text='2 —Ä—É–±.', callback_data='—Ñ–∏—à–∫–∞ 2')],
        [InlineKeyboardButton(text='3 —Ä—É–±.', callback_data='—Ñ–∏—à–∫–∞ 3')],
        [InlineKeyboardButton(text='4 —Ä—É–±.', callback_data='—Ñ–∏—à–∫–∞ 4')],
        [InlineKeyboardButton(text='5 —Ä—É–±.', callback_data='—Ñ–∏—à–∫–∞ 5')]
    ]
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboards


async def start_game_kb():
    """–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã"""
    kb_list = [
        [InlineKeyboardButton(text='–°—Ç–∞—Ä—Ç ‚úîÔ∏è', callback_data='–±–∏—Ç–≤–∞')]
    ]
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def game_keyboards(user_telegram_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–≥—Ä—ã"""
    kb_list = [
        [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ üé£', callback_data='–¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞')],
        [InlineKeyboardButton(text='–î–æ–∫—É–ø üí≤', callback_data='–¥–æ–∫—É–ø–∏—Ç—å')],
        [InlineKeyboardButton(text='–í—ã—à–µ–ª üö™', callback_data='–≤—ã–π—Ç–∏')],
        [InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É üîö', callback_data='–∑–∞–∫–æ–Ω—á–∏—Ç—å')]
    ]
    if user_telegram_id in admins:
        kb_list.append([InlineKeyboardButton(text="Ô∏è–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å ‚öô", callback_data='–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏–≥—Ä—ã')])

    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def game_admin_keyboards():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–≥—Ä—ã"""
    kb_list = [
        [InlineKeyboardButton(text='–ü–æ–º–µ–Ω—è—Ç—å –∑–∞–∫—É–ø –∏–≥—Ä–æ–∫–∞ üí≤', callback_data='–ø–æ–º–µ–Ω—è—Ç—å –∑–∞–∫—É–ø')],
        [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ –∏–≥—Ä—É üé£', callback_data='–≤–æ–∑–≤—Ä–∞—Ç –∏–≥—Ä–æ–∫–∞')],
        [InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å –ª–∏—à–Ω–µ–≥–æ –∏–≥—Ä–æ–∫–∞ üîô', callback_data='—É–±—Ä–∞—Ç—å –ª–∏—à–Ω–µ–≥–æ')],
    ]
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def input_player_game_kb(game_users: list, player_list: list, start: bool):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä—É"""
    builder = InlineKeyboardBuilder()
    if not start:
        for player in game_users:
            if player not in player_list:
                builder.button(text=str(player), callback_data=f'–∏–≥—Ä–æ–∫ –≤ —Å—Ç–∞—Ä—Ç {str(player)}')
        builder.adjust(3)
        builder.row(InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ üëåüèº', callback_data='—Å—Ç–∞—Ä—Ç—É–µ–º'))

    else:
        for player in game_users:
            if player not in player_list:
                builder.button(text=str(player), callback_data=f'–∏–≥—Ä–æ–∫ –≤ –∏–≥—Ä—É {str(player)}')
        builder.adjust(3)
    keyboards = builder.as_markup()
    return keyboards


async def purchase_players_keyboards(players: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–∫—É–ø–∞ —Ñ–∏—à–µ–∫"""
    kb_list = []
    for player in players:
        kb_list.append([InlineKeyboardButton(text=player, callback_data=f'–∑–∞–∫—É–ø {player}')])
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def purchase():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∏—à–µ–∫ –¥–ª—è –∑–∞–∫—É–ø–∞"""
    kb_list = [
        [InlineKeyboardButton(text='500 —Ñ–∏—à–µ–∫', callback_data='—Ñ–∏—à–∫–∏ 500')],
        [InlineKeyboardButton(text='1000 —Ñ–∏—à–µ–∫', callback_data='—Ñ–∏—à–∫–∏ 1000')],
        [InlineKeyboardButton(text='2000 —Ñ–∏—à–µ–∫', callback_data='—Ñ–∏—à–∫–∏ 2000')]
    ]
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def exit_players_keyboards(players: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã"""
    kb_list = []
    for player in players:
        kb_list.append([InlineKeyboardButton(text=player, callback_data=f'–≤—ã—Ö–æ–¥ {player}')])
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def back_players_keyboards(players: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –≤—ã—à–µ–¥—à–µ–≥–æ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∏–≥—Ä—É"""
    kb_list = []
    print(players)
    for player in players:
        print(player)
        kb_list.append([InlineKeyboardButton(text=player, callback_data=f'–≤–µ—Ä–Ω—É—Ç—å {player}')])
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def extra_players_keyboards(players: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–≥—Ä—ã"""
    kb_list = []
    for player in players:
        kb_list.append([InlineKeyboardButton(text=player, callback_data=f'—É–¥–∞–ª–∏—Ç—å {player}')])
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def exit_player(chips):
    """–ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"""
    kb_list = [
        [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=chips)]
    ]
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards


async def change_purchase_players_keyboards(players: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–∫—É–ø–∞ —Ñ–∏—à–µ–∫"""
    kb_list = []
    for player in players:
        kb_list.append([InlineKeyboardButton(text=player, callback_data=f'–ø–æ–º–µ–Ω—è—Ç—å {player}')])
    keyboards = InlineKeyboardMarkup(
        inline_keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
    return keyboards
